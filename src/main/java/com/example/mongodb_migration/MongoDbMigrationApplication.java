package com.example.mongodb_migration;

import com.example.mongodb_migration.entities.Activity;
import com.example.mongodb_migration.entities.SimpleActivity;
import com.example.mongodb_migration.repositories.ActivityRepository;
import com.example.mongodb_migration.repositories.SimpleActivityRepository;
import org.apache.commons.lang3.RandomStringUtils;
import org.apache.commons.lang3.RandomUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;

import java.time.Instant;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;

@SpringBootApplication
@EnableMongoRepositories(basePackages = "com.example.mongodb_migration.repositories")
public class MongoDbMigrationApplication implements CommandLineRunner {
    @Autowired
    ActivityRepository activityRepository;
    @Autowired
    SimpleActivityRepository simpleActivityRepository;
    public static void main(String[] args) {
        SpringApplication.run(MongoDbMigrationApplication.class, args);
    }

    @Override
    public void run(String... args) {
        String newYaml = "apiVersion: apps/v1\\nkind: StatefulSet\\nmetadata:\\n  annotations:\\n    kubectl.kubernetes.io/last-applied-configuration: |\\n      {\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"StatefulSet\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"harness.io/name\\\":\\\"mohitdel\\\"},\\\"name\\\":\\\"mohitdel\\\",\\\"namespace\\\":\\\"harness-delegate-ng\\\"},\\\"spec\\\":{\\\"podManagementPolicy\\\":\\\"Parallel\\\",\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"harness.io/name\\\":\\\"mohitdel\\\"}},\\\"serviceName\\\":\\\"\\\",\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"harness.io/name\\\":\\\"mohitdel\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JAVA_OPTS\\\",\\\"value\\\":\\\"-Xms64M\\\"},{\\\"name\\\":\\\"ACCOUNT_ID\\\",\\\"value\\\":\\\"kmpySmUISimoRrJL6NL73w\\\"},{\\\"name\\\":\\\"DELEGATE_TOKEN\\\",\\\"value\\\":\\\"2f6b0988b6fb3370073c3d0505baee59\\\"},{\\\"name\\\":\\\"MANAGER_HOST_AND_PORT\\\",\\\"value\\\":\\\"https://pr.harness.io/cds-3780\\\"},{\\\"name\\\":\\\"DEPLOY_MODE\\\",\\\"value\\\":\\\"KUBERNETES\\\"},{\\\"name\\\":\\\"DELEGATE_NAME\\\",\\\"value\\\":\\\"mohitdel\\\"},{\\\"name\\\":\\\"DELEGATE_TYPE\\\",\\\"value\\\":\\\"KUBERNETES\\\"},{\\\"name\\\":\\\"PROXY_HOST\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"PROXY_PORT\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"PROXY_SCHEME\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"NO_PROXY\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"PROXY_MANAGER\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"PROXY_USER\\\",\\\"valueFrom\\\":{\\\"secretKeyRef\\\":{\\\"key\\\":\\\"PROXY_USER\\\",\\\"name\\\":\\\"mohitdel-proxy\\\"}}},{\\\"name\\\":\\\"PROXY_PASSWORD\\\",\\\"valueFrom\\\":{\\\"secretKeyRef\\\":{\\\"key\\\":\\\"PROXY_PASSWORD\\\",\\\"name\\\":\\\"mohitdel-proxy\\\"}}},{\\\"name\\\":\\\"POLL_FOR_TASKS\\\",\\\"value\\\":\\\"false\\\"},{\\\"name\\\":\\\"ENABLE_CE\\\",\\\"value\\\":\\\"false\\\"},{\\\"name\\\":\\\"GRPC_SERVICE_ENABLED\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"GRPC_SERVICE_CONNECTOR_PORT\\\",\\\"value\\\":\\\"8080\\\"},{\\\"name\\\":\\\"VERSION_CHECK_DISABLED\\\",\\\"value\\\":\\\"false\\\"},{\\\"name\\\":\\\"DELEGATE_NAMESPACE\\\",\\\"valueFrom\\\":{\\\"fieldRef\\\":{\\\"fieldPath\\\":\\\"metadata.namespace\\\"}}},{\\\"name\\\":\\\"DELEGATE_DESCRIPTION\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"DELEGATE_TAGS\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"DELEGATE_ORG_IDENTIFIER\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"DELEGATE_PROJECT_IDENTIFIER\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"INIT_SCRIPT\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"NEXT_GEN\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"WATCHER_STORAGE_URL\\\",\\\"value\\\":\\\"https://qa.harness.io/public/pr/premium/watchers\\\"},{\\\"name\\\":\\\"WATCHER_CHECK_LOCATION\\\",\\\"value\\\":\\\"current.version\\\"},{\\\"name\\\":\\\"REMOTE_WATCHER_URL_CDN\\\",\\\"value\\\":\\\"https://qa.harness.io/public/shared/watchers/builds\\\"},{\\\"name\\\":\\\"DELEGATE_STORAGE_URL\\\",\\\"value\\\":\\\"https://qa.harness.io\\\"},{\\\"name\\\":\\\"DELEGATE_CHECK_LOCATION\\\",\\\"value\\\":\\\"delegatepr.txt\\\"},{\\\"name\\\":\\\"HELM_DESIRED_VERSION\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"USE_CDN\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"CDN_URL\\\",\\\"value\\\":\\\"https://qa.harness.io\\\"},{\\\"name\\\":\\\"JRE_VERSION\\\",\\\"value\\\":\\\"1.8.0_242\\\"},{\\\"name\\\":\\\"HELM3_PATH\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"HELM_PATH\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"KUSTOMIZE_PATH\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"KUBECTL_PATH\\\",\\\"value\\\":\\\"\\\"}],\\\"image\\\":\\\"harness/delegate:latest\\\",\\\"imagePullPolicy\\\":\\\"Always\\\",\\\"livenessProbe\\\":{\\\"exec\\\":{\\\"command\\\":[\\\"bash\\\",\\\"-c\\\",\\\"[[ -e /opt/harness-delegate/msg/data/watcher-data \\\\u0026\\\\u0026 $(($(date +%s000) - $(grep heartbeat /opt/harness-delegate/msg/data/watcher-data | cut -d \\\\\\\":\\\\\\\" -f 2 | cut -d \\\\\\\",\\\\\\\" -f 1))) -lt 300000 ]]\\\"]},\\\"failureThreshold\\\":2,\\\"initialDelaySeconds\\\":240,\\\"periodSeconds\\\":10},\\\"name\\\":\\\"harness-delegate-instance\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"readinessProbe\\\":{\\\"exec\\\":{\\\"command\\\":[\\\"test\\\",\\\"-s\\\",\\\"delegate.log\\\"]},\\\"initialDelaySeconds\\\":20,\\\"periodSeconds\\\":10},\\\"resources\\\":{\\\"limits\\\":{\\\"cpu\\\":\\\"0.5\\\",\\\"memory\\\":\\\"2048Mi\\\"},\\\"requests\\\":{\\\"cpu\\\":\\\"0.5\\\",\\\"memory\\\":\\\"2048Mi\\\"}}}],\\\"restartPolicy\\\":\\\"Always\\\"}}}}\\n  labels:\\n    harness.io/name: mohitdel\\n  name: mohitdel\\n  namespace: harness-delegate-ng\\n  uid: 40454a4f-4f93-4e1f-b1d4-b7cb53864728\\nspec:\\n  podManagementPolicy: Parallel\\n  replicas: 1\\n  revisionHistoryLimit: 10\\n  selector:\\n    matchLabels:\\n      harness.io/name: mohitdel\\n  serviceName: ''\\n  template:\\n    metadata:\\n      labels:\\n        harness.io/name: mohitdel\\n    spec:\\n      containers:\\n      - env:\\n        - name: JAVA_OPTS\\n          value: -Xms64M\\n        - name: ACCOUNT_ID\\n          value: kmpySmUISimoRrJL6NL73w\\n        - name: DELEGATE_TOKEN\\n          value: 2f6b0988b6fb3370073c3d0505baee59\\n        - name: MANAGER_HOST_AND_PORT\\n          value: https://pr.harness.io/cds-3780\\n        - name: DEPLOY_MODE\\n          value: KUBERNETES\\n        - name: DELEGATE_NAME\\n          value: mohitdel\\n        - name: DELEGATE_TYPE\\n          value: KUBERNETES\\n        - name: PROXY_HOST\\n        - name: PROXY_PORT\\n        - name: PROXY_SCHEME\\n        - name: NO_PROXY\\n        - name: PROXY_MANAGER\\n          value: 'true'\\n        - name: PROXY_USER\\n          valueFrom:\\n            secretKeyRef:\\n              key: PROXY_USER\\n              name: mohitdel-proxy\\n        - name: PROXY_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              key: PROXY_PASSWORD\\n              name: mohitdel-proxy\\n        - name: POLL_FOR_TASKS\\n          value: 'false'\\n        - name: ENABLE_CE\\n          value: 'false'\\n        - name: GRPC_SERVICE_ENABLED\\n          value: 'true'\\n        - name: GRPC_SERVICE_CONNECTOR_PORT\\n          value: '8080'\\n        - name: VERSION_CHECK_DISABLED\\n          value: 'false'\\n        - name: DELEGATE_NAMESPACE\\n          valueFrom:\\n            fieldRef:\\n              apiVersion: v1\\n              fieldPath: metadata.namespace\\n        - name: DELEGATE_DESCRIPTION\\n        - name: DELEGATE_TAGS\\n        - name: DELEGATE_ORG_IDENTIFIER\\n        - name: DELEGATE_PROJECT_IDENTIFIER\\n        - name: INIT_SCRIPT\\n        - name: NEXT_GEN\\n          value: 'true'\\n        - name: WATCHER_STORAGE_URL\\n          value: https://qa.harness.io/public/pr/premium/watchers\\n        - name: WATCHER_CHECK_LOCATION\\n          value: current.version\\n        - name: REMOTE_WATCHER_URL_CDN\\n          value: https://qa.harness.io/public/shared/watchers/builds\\n        - name: DELEGATE_STORAGE_URL\\n          value: https://qa.harness.io\\n        - name: DELEGATE_CHECK_LOCATION\\n          value: delegatepr.txt\\n        - name: HELM_DESIRED_VERSION\\n        - name: USE_CDN\\n          value: 'true'\\n        - name: CDN_URL\\n          value: https://qa.harness.io\\n        - name: JRE_VERSION\\n          value: 1.8.0_242\\n        - name: HELM3_PATH\\n        - name: HELM_PATH\\n        - name: KUSTOMIZE_PATH\\n        - name: KUBECTL_PATH\\n        image: harness/delegate:latest\\n        imagePullPolicy: Always\\n        livenessProbe:\\n          exec:\\n            command:\\n            - bash\\n            - -c\\n            - '[[ -e /opt/harness-delegate/msg/data/watcher-data && $(($(date +%s000)\\n              - $(grep heartbeat /opt/harness-delegate/msg/data/watcher-data | cut\\n              -d \\\":\\\" -f 2 | cut -d \\\",\\\" -f 1))) -lt 300000 ]]'\\n          failureThreshold: 2\\n          initialDelaySeconds: 240\\n          periodSeconds: 10\\n          successThreshold: 1\\n          timeoutSeconds: 1\\n        name: harness-delegate-instance\\n        ports:\\n        - containerPort: 8080\\n          protocol: TCP\\n        readinessProbe:\\n          exec:\\n            command:\\n            - test\\n            - -s\\n            - delegate.log\\n          failureThreshold: 3\\n          initialDelaySeconds: 20\\n          periodSeconds: 10\\n          successThreshold: 1\\n          timeoutSeconds: 1\\n        resources:\\n          limits:\\n            cpu: 500m\\n            memory: 2Gi\\n          requests:\\n            cpu: 500m\\n            memory: 2Gi\\n        terminationMessagePath: /dev/termination-log\\n        terminationMessagePolicy: File\\n      dnsPolicy: ClusterFirst\\n      restartPolicy: Always\\n      schedulerName: default-scheduler\\n      securityContext: {}\\n      terminationGracePeriodSeconds: 30\\n  updateStrategy:\\n    type: RollingUpdate\\n    rollingUpdate:\\n      partition: 0\\nstatus:\\n  collisionCount: 0\\n  currentReplicas: 1\\n  currentRevision: mohitdel-5f6d5798fb\\n  observedGeneration: 1\\n  replicas: 1\\n  updateRevision: mohitdel-5f6d5798fb\\n  updatedReplicas: 1\\n";
        String oldYaml = "apiVersion: apps/v1\\nkind: StatefulSet\\nmetadata:\\n  annotations:\\n    kubectl.kubernetes.io/last-applied-configuration: |\\n      {\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"StatefulSet\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"harness.io/name\\\":\\\"mohitdel\\\"},\\\"name\\\":\\\"mohitdel\\\",\\\"namespace\\\":\\\"harness-delegate-ng\\\"},\\\"spec\\\":{\\\"podManagementPolicy\\\":\\\"Parallel\\\",\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"harness.io/name\\\":\\\"mohitdel\\\"}},\\\"serviceName\\\":\\\"\\\",\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"harness.io/name\\\":\\\"mohitdel\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JAVA_OPTS\\\",\\\"value\\\":\\\"-Xms64M\\\"},{\\\"name\\\":\\\"ACCOUNT_ID\\\",\\\"value\\\":\\\"kmpySmUISimoRrJL6NL73w\\\"},{\\\"name\\\":\\\"DELEGATE_TOKEN\\\",\\\"value\\\":\\\"2f6b0988b6fb3370073c3d0505baee59\\\"},{\\\"name\\\":\\\"MANAGER_HOST_AND_PORT\\\",\\\"value\\\":\\\"https://pr.harness.io/cds-3780\\\"},{\\\"name\\\":\\\"DEPLOY_MODE\\\",\\\"value\\\":\\\"KUBERNETES\\\"},{\\\"name\\\":\\\"DELEGATE_NAME\\\",\\\"value\\\":\\\"mohitdel\\\"},{\\\"name\\\":\\\"DELEGATE_TYPE\\\",\\\"value\\\":\\\"KUBERNETES\\\"},{\\\"name\\\":\\\"PROXY_HOST\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"PROXY_PORT\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"PROXY_SCHEME\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"NO_PROXY\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"PROXY_MANAGER\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"PROXY_USER\\\",\\\"valueFrom\\\":{\\\"secretKeyRef\\\":{\\\"key\\\":\\\"PROXY_USER\\\",\\\"name\\\":\\\"mohitdel-proxy\\\"}}},{\\\"name\\\":\\\"PROXY_PASSWORD\\\",\\\"valueFrom\\\":{\\\"secretKeyRef\\\":{\\\"key\\\":\\\"PROXY_PASSWORD\\\",\\\"name\\\":\\\"mohitdel-proxy\\\"}}},{\\\"name\\\":\\\"POLL_FOR_TASKS\\\",\\\"value\\\":\\\"false\\\"},{\\\"name\\\":\\\"ENABLE_CE\\\",\\\"value\\\":\\\"false\\\"},{\\\"name\\\":\\\"GRPC_SERVICE_ENABLED\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"GRPC_SERVICE_CONNECTOR_PORT\\\",\\\"value\\\":\\\"8080\\\"},{\\\"name\\\":\\\"VERSION_CHECK_DISABLED\\\",\\\"value\\\":\\\"false\\\"},{\\\"name\\\":\\\"DELEGATE_NAMESPACE\\\",\\\"valueFrom\\\":{\\\"fieldRef\\\":{\\\"fieldPath\\\":\\\"metadata.namespace\\\"}}},{\\\"name\\\":\\\"DELEGATE_DESCRIPTION\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"DELEGATE_TAGS\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"DELEGATE_ORG_IDENTIFIER\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"DELEGATE_PROJECT_IDENTIFIER\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"INIT_SCRIPT\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"NEXT_GEN\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"WATCHER_STORAGE_URL\\\",\\\"value\\\":\\\"https://qa.harness.io/public/pr/premium/watchers\\\"},{\\\"name\\\":\\\"WATCHER_CHECK_LOCATION\\\",\\\"value\\\":\\\"current.version\\\"},{\\\"name\\\":\\\"REMOTE_WATCHER_URL_CDN\\\",\\\"value\\\":\\\"https://qa.harness.io/public/shared/watchers/builds\\\"},{\\\"name\\\":\\\"DELEGATE_STORAGE_URL\\\",\\\"value\\\":\\\"https://qa.harness.io\\\"},{\\\"name\\\":\\\"DELEGATE_CHECK_LOCATION\\\",\\\"value\\\":\\\"delegatepr.txt\\\"},{\\\"name\\\":\\\"HELM_DESIRED_VERSION\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"USE_CDN\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"CDN_URL\\\",\\\"value\\\":\\\"https://qa.harness.io\\\"},{\\\"name\\\":\\\"JRE_VERSION\\\",\\\"value\\\":\\\"1.8.0_242\\\"},{\\\"name\\\":\\\"HELM3_PATH\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"HELM_PATH\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"KUSTOMIZE_PATH\\\",\\\"value\\\":\\\"\\\"},{\\\"name\\\":\\\"KUBECTL_PATH\\\",\\\"value\\\":\\\"\\\"}],\\\"image\\\":\\\"harness/delegate:latest\\\",\\\"imagePullPolicy\\\":\\\"Always\\\",\\\"livenessProbe\\\":{\\\"exec\\\":{\\\"command\\\":[\\\"bash\\\",\\\"-c\\\",\\\"[[ -e /opt/harness-delegate/msg/data/watcher-data \\\\u0026\\\\u0026 $(($(date +%s000) - $(grep heartbeat /opt/harness-delegate/msg/data/watcher-data | cut -d \\\\\\\":\\\\\\\" -f 2 | cut -d \\\\\\\",\\\\\\\" -f 1))) -lt 300000 ]]\\\"]},\\\"failureThreshold\\\":2,\\\"initialDelaySeconds\\\":240,\\\"periodSeconds\\\":10},\\\"name\\\":\\\"harness-delegate-instance\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"readinessProbe\\\":{\\\"exec\\\":{\\\"command\\\":[\\\"test\\\",\\\"-s\\\",\\\"delegate.log\\\"]},\\\"initialDelaySeconds\\\":20,\\\"periodSeconds\\\":10},\\\"resources\\\":{\\\"limits\\\":{\\\"cpu\\\":\\\"0.5\\\",\\\"memory\\\":\\\"2048Mi\\\"},\\\"requests\\\":{\\\"cpu\\\":\\\"0.5\\\",\\\"memory\\\":\\\"2048Mi\\\"}}}],\\\"restartPolicy\\\":\\\"Always\\\"}}}}\\n  labels:\\n    harness.io/name: mohitdel\\n  name: mohitdel\\n  namespace: harness-delegate-ng\\n  uid: 40454a4f-4f93-4e1f-b1d4-b7cb53864728\\nspec:\\n  podManagementPolicy: Parallel\\n  replicas: 1\\n  revisionHistoryLimit: 10\\n  selector:\\n    matchLabels:\\n      harness.io/name: mohitdel\\n  serviceName: ''\\n  template:\\n    metadata:\\n      labels:\\n        harness.io/name: mohitdel\\n    spec:\\n      containers:\\n      - env:\\n        - name: JAVA_OPTS\\n          value: -Xms64M\\n        - name: ACCOUNT_ID\\n          value: kmpySmUISimoRrJL6NL73w\\n        - name: DELEGATE_TOKEN\\n          value: 2f6b0988b6fb3370073c3d0505baee59\\n        - name: MANAGER_HOST_AND_PORT\\n          value: https://pr.harness.io/cds-3780\\n        - name: DEPLOY_MODE\\n          value: KUBERNETES\\n        - name: DELEGATE_NAME\\n          value: mohitdel\\n        - name: DELEGATE_TYPE\\n          value: KUBERNETES\\n        - name: PROXY_HOST\\n        - name: PROXY_PORT\\n        - name: PROXY_SCHEME\\n        - name: NO_PROXY\\n        - name: PROXY_MANAGER\\n          value: 'true'\\n        - name: PROXY_USER\\n          valueFrom:\\n            secretKeyRef:\\n              key: PROXY_USER\\n              name: mohitdel-proxy\\n        - name: PROXY_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              key: PROXY_PASSWORD\\n              name: mohitdel-proxy\\n        - name: POLL_FOR_TASKS\\n          value: 'false'\\n        - name: ENABLE_CE\\n          value: 'false'\\n        - name: GRPC_SERVICE_ENABLED\\n          value: 'true'\\n        - name: GRPC_SERVICE_CONNECTOR_PORT\\n          value: '8080'\\n        - name: VERSION_CHECK_DISABLED\\n          value: 'false'\\n        - name: DELEGATE_NAMESPACE\\n          valueFrom:\\n            fieldRef:\\n              apiVersion: v1\\n              fieldPath: metadata.namespace\\n        - name: DELEGATE_DESCRIPTION\\n        - name: DELEGATE_TAGS\\n        - name: DELEGATE_ORG_IDENTIFIER\\n        - name: DELEGATE_PROJECT_IDENTIFIER\\n        - name: INIT_SCRIPT\\n        - name: NEXT_GEN\\n          value: 'true'\\n        - name: WATCHER_STORAGE_URL\\n          value: https://qa.harness.io/public/pr/premium/watchers\\n        - name: WATCHER_CHECK_LOCATION\\n          value: current.version\\n        - name: REMOTE_WATCHER_URL_CDN\\n          value: https://qa.harness.io/public/shared/watchers/builds\\n        - name: DELEGATE_STORAGE_URL\\n          value: https://qa.harness.io\\n        - name: DELEGATE_CHECK_LOCATION\\n          value: delegatepr.txt\\n        - name: HELM_DESIRED_VERSION\\n        - name: USE_CDN\\n          value: 'true'\\n        - name: CDN_URL\\n          value: https://qa.harness.io\\n        - name: JRE_VERSION\\n          value: 1.8.0_242\\n        - name: HELM3_PATH\\n        - name: HELM_PATH\\n        - name: KUSTOMIZE_PATH\\n        - name: KUBECTL_PATH\\n        image: harness/delegate:latest\\n        imagePullPolicy: Always\\n        livenessProbe:\\n          exec:\\n            command:\\n            - bash\\n            - -c\\n            - '[[ -e /opt/harness-delegate/msg/data/watcher-data && $(($(date +%s000)\\n              - $(grep heartbeat /opt/harness-delegate/msg/data/watcher-data | cut\\n              -d \\\":\\\" -f 2 | cut -d \\\",\\\" -f 1))) -lt 300000 ]]'\\n          failureThreshold: 2\\n          initialDelaySeconds: 240\\n          periodSeconds: 10\\n          successThreshold: 1\\n          timeoutSeconds: 1\\n        name: harness-delegate-instance\\n        ports:\\n        - containerPort: 8080\\n          protocol: TCP\\n        readinessProbe:\\n          exec:\\n            command:\\n            - test\\n            - -s\\n            - delegate.log\\n          failureThreshold: 3\\n          initialDelaySeconds: 20\\n          periodSeconds: 10\\n          successThreshold: 1\\n          timeoutSeconds: 1\\n        resources:\\n          limits:\\n            cpu: 500m\\n            memory: 2Gi\\n          requests:\\n            cpu: 500m\\n            memory: 2Gi\\n        terminationMessagePath: /dev/termination-log\\n        terminationMessagePolicy: File\\n      dnsPolicy: ClusterFirst\\n      restartPolicy: Always\\n      schedulerName: default-scheduler\\n      securityContext: {}\\n      terminationGracePeriodSeconds: 30\\n  updateStrategy:\\n    type: RollingUpdate\\n    rollingUpdate:\\n      partition: 0\\nstatus:\\n  collisionCount: 0\\n  currentReplicas: 1\\n  currentRevision: mohitdel-5f6d5798fb\\n  observedGeneration: 1\\n  replicas: 1\\n  updateRevision: mohitdel-5f6d5798fb\\n  updatedReplicas: 1\\n";
        String accountId = RandomStringUtils.randomAlphabetic(10);
        List<String> orgIdentifiers = getRandomStrings(2);
        List<String> projectIdentifiers = getRandomStrings(2);
        List<String> monitoredServiceIdentifiers = getRandomStrings(5);
        int count = 0;
        for(String orgIdentifier: orgIdentifiers){
            for(String projectIdentifier: projectIdentifiers){
                for(String monitoredServiceIdentifier: monitoredServiceIdentifiers){
                    for(int i =0; i<10; i++){
                        List<Activity> activities = new ArrayList<>();
                        List<SimpleActivity> simpleActivities = new ArrayList<>();
                        for(int j =0; j<1000; j++) {
                            Activity activity = Activity.builder()
                                    .accountId(accountId)
                                    .orgIdentifier(orgIdentifier)
                                    .projectIdentifier(projectIdentifier)
                                    .monitoredServiceIdentifier(monitoredServiceIdentifier)
                                    .eventTime(between(Instant.now().minus(30, ChronoUnit.DAYS), Instant.now()))
                                    .type("KUBERNETES")
                                    .newYaml(newYaml)
                                    .oldYaml(oldYaml)
                                    .build();
                            activities.add(activity);
                            simpleActivities.add(new SimpleActivity(activity));
                            count++;
                        }
                        activityRepository.saveAll(activities);
                        simpleActivityRepository.saveAll(simpleActivities);
                        System.out.println("Documents inserted: " + count);
                    }
                }
            }
        }
        System.out.println("insertion complete");
    }

    public static Instant between(Instant startInclusive, Instant endExclusive) {
        long startSeconds = startInclusive.getEpochSecond();
        long endSeconds = endExclusive.getEpochSecond();
        long random = RandomUtils.nextLong(startSeconds, endSeconds);
        return Instant.ofEpochSecond(random);
    }

    public List<String> getRandomStrings(int length){
        List<String> randomArrayList = new ArrayList<>();
        for(int i = 0; i<length; i++){
            randomArrayList.add(RandomStringUtils.randomAlphabetic(10));
        }
        return randomArrayList;
    }
}
